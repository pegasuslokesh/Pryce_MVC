@model IPagedList<Pryce_MVC.Models.IT_Module_MasterPage>

@using X.PagedList
@using X.PagedList.Mvc.Core

<div class="card shadow-sm">
    <div class="card-header bg-light d-flex align-items-center justify-content-between">
        <h6 class="mb-0">Advance Search | <span class="text-muted">Total Records: @Model.TotalItemCount</span></h6>
        <button id="toggleSearchBtn" class="btn btn-sm text-primary border-0">
            <i class="fas fa-plus"></i>
        </button>
    </div>

    <div class="card-body border-top d-none" id="searchPanel">
        <div class="row">
            <div class="col-md-4">
                <select id="searchColumn" class="form-select">
                    <option value="">Select Column</option>
                    <option value="Module_Id">Module Id</option>
                    <option value="Module_Name">Module Name</option>
                    <option value="Module_Name_L">Module Name(Local)</option>
                    @* <option value="ParentCompanyName">Parent Company Name</option> *@
                    @* <option value="Company_Code">Company Code</option> *@
                   @*  <option value="ModifiedBy">Modified By</option> *@
                </select>
            </div>
            <div class="col-md-4">
                <select id="searchType" class="form-select">
                    <option value="contains">Contains</option>
                    <option value="equals">Equals</option>
                    <option value="startswith">Starts With</option>
                    <option value="endswith">Ends With</option>
                </select>
            </div>
            <div class="col-md-4">
                <input type="text" id="searchInput" class="form-control" placeholder="Search from Content">
            </div>
        </div>
        <div class="mt-3 text-center">
            <button id="searchBtn" class="btn btn-primary btn-sm">
                <i class="fas fa-search"></i> Search
            </button>
            <button id="resetBtn" class="btn btn-secondary btn-sm">
                <i class="fas fa-sync-alt"></i> Reset
            </button>
        </div>
    </div>

    <div class="card-body">
        @if (Model == null || !Model.Any())
        {
            <p class="text-danger text-center fw-bold">No records found.</p>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover table-bordered align-middle" id="religionTable">
                    <thead class="table-light">
                        <tr>
                            <th class="text-center" style="width: 50px;">Action</th>
                            <th class="sortable" data-column="Module_Id">Model Id <i class="fas fa-sort"></i></th>
                            <th class="sortable" data-column="Module_Name">Model Name <i class="fas fa-sort"></i></th>
                            <th class="sortable" data-column="Module_Name_L">Model Name (Local) <i class="fas fa-sort"></i></th>
                            @* <th class="sortable" data-column="ParentCompanyName">Parent Compan Name <i class="fas fa-sort"></i></th> *@
                            @* <th class="sortable" data-column="Company_Code">Company Code <i class="fas fa-sort"></i></th> *@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-id="@item.Module_Id">
                                <td class="text-center">
                                    <div class="dropdown">
                                        <button class="btn btn-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-h"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li>
                                                <a class="dropdown-item edit-btn" data-id="@item.Module_Id" href="javascript:void(0);">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>

                                            </li>
                                            <li>
                                                <a class="dropdown-item text-danger delete-btn" href="#" data-id="@item.Module_Id">
                                                    <i class="fas fa-trash"></i> Delete
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </td>
                                <td>@item.Module_Id</td>
                                <td>@item.Module_Name</td>
                                <td>@item.Module_Name_L</td>
                                @* <td>@item.ParentCompany</td> *@
                                @* <td>@item.Company_Code</td> *@
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="pagination-container d-flex justify-content-start mt-3">
                @Html.PagedListPager(Model, page => Url.Action("ListPartial", new { page }),
                         new PagedListRenderOptions
            {
                Display = PagedListDisplayMode.IfNeeded,
                MaximumPageNumbersToDisplay = 5,
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                LinkToFirstPageFormat = "« First",
                LinkToLastPageFormat = "Last »",
                LinkToPreviousPageFormat = "‹ Prev",
                LinkToNextPageFormat = "Next ›",
                ContainerDivClasses = new[] { "pagination", "justify-content-start" },
                UlElementClasses = new[] { "pagination", "pagination-sm" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            })
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".edit-btn").click(function () {
            var moduleId = $(this).data("id");
            var url = "/IT_ModuleMaster/EditPartial/" + moduleId; // Modify the controller path as needed

            // Show loader
            $(".loader").fadeIn();

            // Load the form into the "new" tab
            $.get(url, function (data) {
                $("#newContent").html(data);

                // Switch to the "new" tab
                $(".tab-content > .tab-pane").removeClass("show active");
                $("#new").addClass("show active");

                // Hide loader
                $(".loader").fadeOut();
            }).fail(function () {
                Swal.fire("Error", "Failed to load edit form.", "error");
                $(".loader").fadeOut();
            });
        });
    });

    $(document).ready(function () {
        $("#toggleSearchBtn").click(function () {
            $("#searchPanel").toggleClass("d-none");
            var icon = $(this).find("i");
            icon.toggleClass("fa-plus fa-minus");
        });

        // Delete record
        $(document).on("click", ".delete-btn", function (e) {
            e.preventDefault(); // ✅ Prevent default link behavior
            debugger;
            var id = $(this).data("id");

            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/IT_ModuleMaster/Delete/" + id,
                        type: "POST",
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function () {
                            Swal.fire("Deleted!", "Record deleted successfully.", "success");
                            loadPage(1); // ✅ Reload list after deletion
                        },
                        error: function (xhr) {
                            console.log("Error Response:", xhr.responseText);
                            Swal.fire("Error", "An error occurred while deleting the record.", "error");
                        }
                    });
                }
            });
        });

        function loadTable(url) {
            $.get(url, function (data) {
                $("#listContent").html(data);
            }).fail(function () {
                alert("Error while updating table.");
            });
        }

        $(".pagination-container a").click(function (event) {
            event.preventDefault();
            loadTable($(this).attr("href"));
        });

        $(".sortable").click(function () {
            var column = $(this).data("column");
            var sortOrder = sessionStorage.getItem("sortOrder_" + column) || "asc";

            sortOrder = (sortOrder === "asc") ? "desc" : "asc";
            sessionStorage.setItem("sortOrder_" + column, sortOrder);

            $.ajax({
                url: "/IT_ModuleMaster/ListPartial",
                type: "GET",
                data: { sortColumn: column, sortOrder: sortOrder },
                success: function (response) {
                    $("#listContent").html(response);
                },
                error: function () {
                    alert("Error while sorting.");
                }
            });
        });

        $("#searchBtn").click(function () {
            $.ajax({
                url: "/IT_ModuleMaster/ListPartial",
                type: "GET",
                data: { searchColumn: $("#searchColumn").val(), searchType: $("#searchType").val(), searchText: $("#searchInput").val().trim() },
                success: function (response) { $("#listContent").html(response); },
                error: function () { alert("Error while searching."); }
            });
        });

        $("#resetBtn").click(function () { $("#searchColumn, #searchType").prop("selectedIndex", 0); $("#searchInput").val(""); $("#searchBtn").trigger("click"); });
    });
</script>
